// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phoenix.Infrastructure.Contexts;

#nullable disable

namespace Phoenix.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251021141238_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Phoenix")
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phoenix.Domain.Aggregates.Subscription.SubscriptionPlan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastUpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans", "Phoenix");
                });

            modelBuilder.Entity("Phoenix.Domain.Aggregates.User.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CurrentPlanId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastUpdatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ReservedPlanId")
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentPlanId");

                    b.HasIndex("ReservedPlanId");

                    b.ToTable("Users", "Phoenix");
                });

            modelBuilder.Entity("Phoenix.Domain.Aggregates.Subscription.SubscriptionPlan", b =>
                {
                    b.OwnsOne("Framework.Core.Domain.Toolkits.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<string>("SubscriptionPlanId")
                                .HasColumnType("nvarchar(26)");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(19, 4)
                                .HasColumnType("decimal(19,4)")
                                .HasColumnName("Price");

                            b1.HasKey("SubscriptionPlanId");

                            b1.ToTable("SubscriptionPlans", "Phoenix");

                            b1.WithOwner()
                                .HasForeignKey("SubscriptionPlanId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("Phoenix.Domain.Aggregates.User.User", b =>
                {
                    b.HasOne("Phoenix.Domain.Aggregates.Subscription.SubscriptionPlan", "CurrentPlan")
                        .WithMany()
                        .HasForeignKey("CurrentPlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Users_CurrentPlan");

                    b.HasOne("Phoenix.Domain.Aggregates.Subscription.SubscriptionPlan", "ReservedPlan")
                        .WithMany()
                        .HasForeignKey("ReservedPlanId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Users_ReservedPlan");

                    b.OwnsOne("Framework.Core.Domain.Toolkits.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<string>("UserId")
                                .HasColumnType("nvarchar(26)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .IsUnicode(false)
                                .HasColumnType("varchar(256)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users", "Phoenix");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("CurrentPlan");

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("ReservedPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
